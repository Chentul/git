git init: inicializa git en el proyecto.

git add <nombre_del_archivo>: agrega el archivo al stage.
git add --all: agrega todos los archivos.

git dif: muestra los cambios.
git diff <commit1> <commit2>: muestra la diferencia de los cambios entre dos commits.
git commit --amend: cambia el texto del commit anterior.

git checkout -- <nombre_del_archivo>: revierte los cambios del archivo antes de mandarlo al stage.
git reset HEAD <nombre_del_archivo>: elimina los cambios en el stage.

git log --oneline: muestra todos los commit en una sola linea.
git log --oneline --decorate: muestra (HEAD->branch).
git reset <nombre_del_archivo>: elimina el contenido de un commit del stage.
git reset --hard <nombre_del_commit>: posiciona el master/HEAD en el commit seleccionado.
git reset --soft <nombre_del_commit>: regresa al commit indicado y los commit posteriores pasan al stage.

HEAD~1: 1 commit antes que el HEAD
HEAD~2: 2 commit antes que el HEAD

git revert HEAD: revierte el ultimo commit.
git revert --no-commit HEAD: revierte el ultimo commit.
git revert --no-commit HEAD~1: revierte un commit anterior al head.
git revert --continue: elimina todo lo queria sacar del stage.

# CREAR SHORTCUTS EN GIT
git config --global alias.<tu_alias_aqui>: comando a convertir en alias
git config --global --get-regexp alias: obtiene una lista de todos los alias.
git config --global --unset alias.<nombre_del_alias>: elimina el alias.

# CONSULTAR LOS COMANDOS
git add -h
git commit -h
git branch -h
.
.
.
